DNS proxy server
Write DNS proxy server with a domains blacklist feature to filter unwanted host names resolving.

Functional requirements
1.The proxy server reads its parameters during startup from the configuration file.
2.The configuration file contains the following parameters:
•IP address of upstream DNS server
•List of domain names to filter resolving ("blacklist")
•Type of DNS proxy server's response for blacklisted domains (not found, refused, resolve to a pre-configured IP address)
3.DNS proxy server uses UDP protocol for processing client's requests and for interaction with upstream DNS server.
4.If a domain name from a client's request is not found in the blacklist, then the proxy server forwards the request to the upstream DNS server, waits for a response, and sends it back to the client.
5.If a domain name from a client's request is found in the blacklist, then the proxy server responds with a response defined in the configuration file.
Non-functional requirements
1.Programming language: Python
2.It is allowed to use third-party libraries or code. If you use one then you must comply with its license terms and conditions. The only exception is that it is not allowed to use third-party libraries or code that implement DNS parsing and constructing DNS packets.
All other requirements and restrictions are up to your discretion.

Expectations
What we expect to receive from you when you complete this task:
1.Source code of DNS proxy server written according to the requirements. Source code should be in a plain ASCII text (it is not a joke - sometimes we receive source code in MS Word document).
2.Instruction how to build, configure and run the proxy server (including necessary files like Makefile etc).
3.Description how you tested the proxy server.
4.Document, if your solution has additional (known to you) limitations or restrictions, or it has more features that it was requested.
If you have GitHub (or similar) account then you can publish everything there; otherwise, put everything into an archive.
